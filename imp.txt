#Print - 1
col_list,col_max_list,col_min_list,date_max_list,date_min_list = daily_maximum_values(df,most_corr_columns)
generated_pdf.ln(15)
generated_pdf.cell(40,10,txt="Here are some daily statistics about the data: ",ln=1,align="L")
for i in range(len(col_list)):
    print("The maximum ",col_list[i]," was ",round(col_max_list[i],2),"on ",date_max_list[i].values[0][0])
    print("The minimum ",col_list[i]," was ",round(col_min_list[i],2),"on ",date_min_list[i].values[0][0],"\n")
    generated_pdf.cell(10,10,txt ="The maximum "+str(col_list[i])+" was "+str(round(col_max_list[i],2))+" on "+str(date_max_list[i].values[0][0]),align="L",ln=1)
    generated_pdf.cell(10,10,txt ="The minimum "+str(col_list[i])+" was "+str(round(col_min_list[i],2))+" on "+str(date_min_list[i].values[0][0]),align="L",ln=1)
    generated_pdf.cell(10,10,txt ="--------------------------------------------------------------------------------------------------------------",align="L",ln=1)

#Print - 2
generated_pdf.ln(15)
generated_pdf.cell(40,10,txt="Time-based analysis about the data: ",ln=1,align="L")
for per in ["hour","dayofweek","dayofmonth","weekofyear","quarter"]:
    col_list,col_max_list,col_min_list,date_max_list,date_min_list,hourly_mean_df = time_period_mean(df,per,most_corr_columns)
    for i in range(len(col_list)):
        if per == "hour":
            generated_pdf.cell(10,10,txt = "----------------------------------Hourly-----------------------------------------",align="L",ln=1)
            print(col_list[i],"is highest between",date_max_list[i].values[0],":00 and",date_max_list[i].values[0]+1,":00 with an average value of",round(col_max_list[i],3))
            print(col_list[i],"is lowest between",date_min_list[i].values[0],":00 and",date_min_list[i].values[0]+1,":00 with an average value of",round(col_min_list[i],3))
            generated_pdf.cell(10,10,txt =str(col_list[i])+" is highest between "+str(date_max_list[i].values[0])+":00 and "+str(date_max_list[i].values[0]+1)+":00 with an average value of "+str(round(col_max_list[i],3)),align="L",ln=1)
            generated_pdf.cell(10,10,txt =str(col_list[i])+" is lowest between "+str(date_min_list[i].values[0])+":00 and "+str(date_min_list[i].values[0]+1)+":00 with an average value of "+str(round(col_min_list[i],3)),align="L",ln=1)
            generated_pdf.cell(10,10,txt ="--------------------------------------------------------------------------------------------------------------",align="L",ln=1)
                    
        elif per == "month":
            generated_pdf.cell(10,10,txt = "----------------------------------Monthly-----------------------------------------",align="L",ln=1)
            quarters = {"January":1,"February":2,"March":3,"April":4,"May":5,"June":6,"July":7,"August":8,"September":9,"October":10,"November":11,"December":12}
            k,v = quarters.keys() , quarters.values()
            print(date_max_list)
            res = [key for key in quarters if quarters[key] == date_max_list[i].values[0]]
            print(col_list[i],"is highest in",res[0],"with an average value of",round(col_max_list[i],3))
            generated_pdf.cell(10,10,txt = str(col_list[i])+"is highest in"+str(res[0])+"with an average value of"+str(round(col_max_list[i],3)),align="L",ln=1)
            res = [key for key in quarters if quarters[key] == date_min_list[i].values[0]]
            print(col_list[i],"is lowest in",res[0],"with an average value of",round(col_min_list[i],3))
            generated_pdf.cell(10,10,txt = str(col_list[i])+"is lowest in"+str(res[0])+"with an average value of"+str(round(col_min_list[i],3)),align="L",ln=1)

        elif per == "year":
            generated_pdf.cell(10,10,txt = "----------------------------------Yearly-----------------------------------------",align="L",ln=1)
            print(col_list[i],"is highest between month",date_max_list[i].values[0],"with an average value of",round(col_max_list[i],3))
            print(col_list[i],"is lowest between month",date_min_list[i].values[0],"with an average value of",round(col_min_list[i],3))
            generated_pdf.cell(10,10,txt =str(col_list[i])+" is highest in year "+str(date_max_list[i].values[0])+" with an average value of "+str(round(col_max_list[i],3)),align="L",ln=1)
            generated_pdf.cell(10,10,txt =str(col_list[i])+" is lowest in year "+str(date_min_list[i].values[0])+" with an average value of "+str(round(col_min_list[i],3)),align="L",ln=1)
            generated_pdf.cell(10,10,txt ="--------------------------------------------------------------------------------------------------------------",align="L",ln=1)

        elif per == "dayofmonth":
            print(col_list[i],"is highest between day",date_max_list[i].values[0],"and day",date_max_list[i].values[0]+1," with an average value of ",round(col_max_list[i],3))
            print(col_list[i],"is lowest between day",date_min_list[i].values[0],"and day",date_min_list[i].values[0]+1," with an average value of ",round(col_min_list[i],3))
            generated_pdf.cell(10,10,txt =str(col_list[i])+" is highest on day "+str(date_max_list[i].values[0])+" with an average value of "+str(round(col_max_list[i],3)),align="L",ln=1)
            generated_pdf.cell(10,10,txt =str(col_list[i])+" is lowest on day "+str(date_min_list[i].values[0])+" with an average value of "+str(round(col_min_list[i],3)),align="L",ln=1)
            generated_pdf.cell(10,10,txt ="--------------------------------------------------------------------------------------------------------------",align="L",ln=1)

        elif per == "dayofweek":
            generated_pdf.cell(10,10,txt = "----------------------------------Day of Week-----------------------------------------",align="L",ln=1)
            quarters = {"Monday":0,"Tuesday":1,"Wednesday":2,"Thursday":3,"Friday":4,"Saturday":5,"Sunday":6}
            k,v = quarters.keys() , quarters.values()
            res = [key for key in quarters if quarters[key] == date_max_list[i].values[0]]
            print(col_list[i],"is highest on",res[0],"with an average value of",round(col_max_list[i],3))
            generated_pdf.cell(10,10,txt =str(col_list[i])+" is highest on "+str(res[0])+" with an average value of "+str(round(col_max_list[i],3)),align="L",ln=1)
            res = [key for key in quarters if quarters[key] == date_min_list[i].values[0]]
            print(col_list[i],"is lowest on",res[0],"with an average value of",round(col_min_list[i],3))
            generated_pdf.cell(10,10,txt =str(col_list[i])+" is lowest on "+str(res[0])+" with an average value of "+str(round(col_min_list[i],3)),align="L",ln=1)
            generated_pdf.cell(10,10,txt ="--------------------------------------------------------------------------------------------------------------",align="L",ln=1)

        elif per == "dayofyear":
            print(col_list[i],"is highest on the",date_max_list[i].values[0],"day of the year with an average value of",round(col_max_list[i],3))
            print(col_list[i],"is lowest on the",date_min_list[i].values[0],"day of the year with an average value of",round(col_min_list[i],3))
            generated_pdf.cell(10,10,txt =str(col_list[i])+" is highest on the "+str(date_max_list[i].values[0])+" day of the year with an average value of "+str(round(col_max_list[i],3)),align="L",ln=1)
            generated_pdf.cell(10,10,txt =str(col_list[i])+" is lowest on the "+str(date_min_list[i].values[0])+" day of the year with an average value of "+str(round(col_min_list[i],3)),align="L",ln=1)
            generated_pdf.cell(10,10,txt ="--------------------------------------------------------------------------------------------------------------",align="L",ln=1)

        elif per == "weekofyear":
            print(col_list[i],"is highest in week number",date_max_list[i].values[0],"with an average value of",round(col_max_list[i],3))
            print(col_list[i],"is highest in week number",date_min_list[i].values[0],"with an average value of",round(col_min_list[i],3))
            generated_pdf.cell(10,10,txt =str(col_list[i])+" is highest in week number "+str(date_max_list[i].values[0])+" with an average value of "+str(round(col_max_list[i],3)),align="L",ln=1)
            generated_pdf.cell(10,10,txt =str(col_list[i])+" is lowest in week number "+str(date_min_list[i].values[0])+" with an average value of "+str(round(col_min_list[i],3)),align="L",ln=1)
            generated_pdf.cell(10,10,txt ="--------------------------------------------------------------------------------------------------------------",align="L",ln=1)

        elif per == "quarter":
            quarters = {"1st":1,"2nd":2,"3rd":3,"4th":4}
            k,v = quarters.keys() , quarters.values()
            res = [key for key in quarters if quarters[key] == date_max_list[i].values[0]]
            print(col_list[i],"is highest in the",res[0],"quarter with an average value of",round(col_max_list[i],3))
            generated_pdf.cell(10,10,txt =str(col_list[i])+" is highest in the "+str(res[0])+" quarter with an average value of "+str(round(col_max_list[i],3)),align="L",ln=1)
            res = [key for key in quarters if quarters[key] == date_min_list[i].values[0]]
            print(col_list[i],"is lowest in the",res[0],"quarter with an average value of",round(col_min_list[i],3))
            generated_pdf.cell(10,10,txt =str(col_list[i])+" is highest in the "+str(res[0])+" quarter with an average value of "+str(round(col_min_list[i],3)),align="L",ln=1)
            generated_pdf.cell(10,10,txt ="--------------------------------------------------------------------------------------------------------------",align="L",ln=1)

        #Plot these trends
        plt.figure(figsize=(20,8))
        plt.plot(hourly_mean_df[hourly_mean_df["Column"] == col_list[i]][per],hourly_mean_df[hourly_mean_df["Column"] == col_list[i]]["Value"])
        plt.title(col_list[i])
        plt.grid()
        plt.show()